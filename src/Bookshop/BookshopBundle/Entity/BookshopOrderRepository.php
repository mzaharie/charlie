<?php

namespace Bookshop\BookshopBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * CartItemsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BookshopOrderRepository extends EntityRepository {

    public function getRecent($userID) {
        $qb = $this->createQueryBuilder('l')
                ->select('l')->orderBy('l.id', 'desc')
                ->where('l.user = :userID')
                ->setParameter("userID", $userID);

        return $qb->getQuery()
                        ->getResult();
    }

    public function getRecentNr($userID, $nr) {
        $qb = $this->createQueryBuilder('l')
                ->select('l')->orderBy('l.id', 'desc')
                ->where('l.user = :userID')
                ->setParameter("userID", $userID)
                ->setMaxResults($nr);

        return $qb->getQuery()
                        ->getResult();
    }

    public function getCurrentOrder($userID, $cartID) {
        $qb = $this->createQueryBuilder("o")
                ->select('o')->where('o.user = :userID AND o.cart = :cartID')
                ->setParameter("userID", $userID)
                ->setParameter("cartID", $cartID);

        return $qb->getQuery()
                        ->getResult();
    }

    public function getNrAllOrders($filter) {
        $em = $this->getEntityManager();

        return $em->createQuery('SELECT COUNT(o) FROM BookshopBookshopBundle:BookshopOrder o 
                    INNER JOIN BookshopBookshopBundle:User u WITH u = o.user 
                    INNER JOIN BookshopBookshopBundle:State s WITH s = o.state 
                    WHERE 1=1' . $filter)
                        ->getSingleScalarResult();
    }

    public function getAllOrdersQuery($filter, $count) {
        $em = $this->getEntityManager();
        $dql = "SELECT o FROM BookshopBookshopBundle:BookshopOrder o 
                    INNER JOIN BookshopBookshopBundle:User u WITH u = o.user 
                    INNER JOIN BookshopBookshopBundle:State s WITH s = o.state 
                    WHERE 1=1";
        $dql.=$filter;

        return $em->createQuery($dql)
                        ->setHint('knp_paginator.count', $count);
    }

    public function getUserOrders($userid) {
        $em = $this->getEntityManager();
        $qb = "Select o from BookshopBookshopBundle:BookshopOrder o where o.user = " . $userid;

        return $em->createQuery($qb);
    }

    public function viewOrder($orderid) {
        $qb = $this->createQueryBuilder('o')
                ->select('o')->where('o.id = :orderid')
                ->setParameter('orderid', $orderid);

        return $qb->getQuery()
                        ->getSingleResult();
    }

}
